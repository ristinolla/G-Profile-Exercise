var app=angular.module("profileApp",["profileControllers","loginController"]);app.service("ApiService",function(e,n){function o(e){return n.reject(angular.isObject(e.data)&&e.data.message?e.data.message:e.data)}function t(e){return e.data}var i={};return i.connect=function(n){var i=e({method:"post",url:"/api/connect?state="+STATE,data:n.code,contentType:"application/octet-stream; charset=utf-8"});return i.then(t,o)},i.disconnect=function(n){var i=e({method:"post",url:"/api/disconnect",data:{token:n.code},contentType:"application/octet-stream; charset=utf-8"});return i.then(t,o)},i.getProfile=function(){console.log("ApiService.getProfile");var n=e({method:"get",url:"/api/profile",contentType:"application/octet-stream; charset=utf-8"});return n.then(t,o)},i.getPeople=function(){console.log("ApiService.getPeople");var n=e({method:"get",url:"/api/people",contentType:"application/octet-stream; charset=utf-8"});return n.then(t,o)},i}),app.factory("OauthService",function(e,n,o){var t={};return t.isSignedIn=!1,t.processAuth=function(e){var t=n.defer();return this.isSignedIn&&t.resolve({signedIn:!0,message:"Already signed in."}),e.access_token?(this.immediateFailed=!1,o.connect(e).then(function(e){console.log("Login succesfull, status: ",e),t.resolve({signedIn:!0,message:e})},function(e){console.log("Connection failed because: ",e),t.resolve({signedIn:!1,message:e})})):e.error&&("immediate_failed"===e.error?(this.immediateFailed=!0,t.resolve({signedIn:!1,message:"Immediate Connection failed"})):(console.log("severe amount of shit in the fan"),t.resolve({signedIn:!1,message:e.error}))),t.promise},t.disconnect=function(e){var t=n.defer();return o.disconnect(e).then(function(e){this.isSignedIn=!1,t.resolve({signedOut:!0,message:e})}),t.promise},t});var loginController=angular.module("loginController",[]);loginController.controller("LoginCtrl",function(e,n,o){e.isSignedIn=void 0,e.immediateFailed=!1,e.authResult={},e.errorMessage=!1,e.profile={},e.people={},e.disconnect=function(){o.disconnect(e.authResult).then(function(n){console.log(n),e.isSignedIn=!1,e.profile={},e.people={}})},e.signIn=function(n){console.log("this"),e.$apply(function(){e.authResult=n,o.processAuth(n).then(function(n){console.log(n),n.signedIn===!0?e.isSignedIn=!0:(e.isSignedIn=!1,console.log(n.message),e.handleError(n))})})},e.handleError=function(n){e.errorMessage=n.message},e.renderSignIn=function(){return gapi.signin.render("gPlusSignIn",{callback:"signIn()",clientid:"391956554891-0spjspmirtm07e9l9tsjl1ntkdpcmle5.apps.googleusercontent.com",requestvisibleactions:"http://schemas.google.com/AddActivity",scope:"https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/userinfo.email",theme:"dark",cookiepolicy:"single_host_origin",accesstype:"offline"})}});var profileControllers=angular.module("profileControllers",[]);profileControllers.controller("ProfileCtrl",function(e,n,o){e.isSignedIn=o.isSignedIn,e.immediateFailed=!1,e.authResult={},e.errorMessage=!1,e.profile={},e.people={},e.showProfile=function(){n.getProfile().then(function(n){console.log("Profile object",n),e.profile=n,e.profile.image.bigUrl=n.image.url.split("?")[0]}),n.getPeople().then(function(n){console.log("People object",n),e.people=n})},e.disconnect=function(){o.disconnect(e.authResult).then(function(n){console.log(n),e.isSignedIn=!1,e.profile={},e.people={}})},e.signIn=function(n){"PROMPT"===n.status.method&&(console.log(n),e.$apply(function(){e.authResult=n,o.processAuth(n).then(function(n){console.log(n),n.signedIn===!0?(e.isSignedIn=!0,e.showProfile()):(e.isSignedIn=!1,console.log(n.message))})}))},e.login=function(){var n={callback:e.signIn};gapi.auth.signIn(n)}});