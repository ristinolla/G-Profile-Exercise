var app=angular.module("profileApp",[]);app.service("ApiService",function(e,n){function t(n){var t=e({method:"post",url:"/api/connect?state="+STATE,data:n.code,contentType:"application/octet-stream; charset=utf-8"});return t.then(c,r)}function o(n){console.log("Disconnext in services");var t=e({method:"post",url:"/api/disconnect",data:{token:n.access_token},contentType:"application/octet-stream; charset=utf-8"});return t.then(c,r)}function i(){console.log("ApiService.getProfile");var n=e({method:"get",url:"/api/profile",contentType:"application/octet-stream; charset=utf-8"});return n.then(c,r)}function s(){console.log("ApiService.getPeople");var n=e({method:"get",url:"/api/people",contentType:"application/octet-stream; charset=utf-8"});return n.then(c,r)}function r(e){return n.reject(angular.isObject(e.data)&&e.data.message?e.data.message:e.data)}function c(e){return e.data}return{connect:t,disconnect:o,getProfile:i,getPeople:s}}),app.factory("OauthService",function(e,n,t){var o={};return o.isSignedIn=!1,o.processAuth=function(e){var o=n.defer();return this.isSignedIn&&o.resolve({signedIn:!0,message:"Already signed in."}),e.access_token?(this.immediateFailed=!1,t.connect(e).then(function(e){console.log("Login succesfull, status: ",e),o.resolve({signedIn:!0,message:e})},function(e){console.log("Connection failed because: ",e),o.resolve({signedIn:!1,message:e})})):e.error&&("immediate_failed"===e.error?(this.immediateFailed=!0,o.resolve({signedIn:!1,message:"Immediate Connection failed"})):o.resolve({signedIn:!1,message:e.error})),o.promise},o.disconnect=function(e){var o=n.defer();return t.disconnect(e).then(function(e){this.isSignedIn=!1,o.resolve({signedOut:!0,message:e})}),o.promise},o}),app.controller("ProfileCtrl",function(e,n,t){e.isSignedIn=t.isSignedIn,e.immediateFailed=!1,e.authResult={},e.errorMessage=!1,e.profile={},e.people={},e.disconnect=function(){t.disconnect(e.authResult).then(function(n){console.log(n),e.isSignedIn=!1,e.profile={},e.people={}})},e.signIn=function(n){e.$apply(function(){e.authResult=n,t.processAuth(n).then(function(n){console.log(n),n.signedIn===!0?(e.isSignedIn=!0,e.showProfile()):(e.isSignedIn=!1,console.log(n.message),e.handleError(n))})})},e.handleError=function(n){e.errorMessage=n.message},e.renderSignIn=function(){return gapi.signin.render("gPlusSignIn",{callback:e.signIn,clientid:"391956554891-0spjspmirtm07e9l9tsjl1ntkdpcmle5.apps.googleusercontent.com",requestvisibleactions:"http://schemas.google.com/AddActivity",scope:"https://www.googleapis.com/auth/plus.login",theme:"dark",cookiepolicy:"single_host_origin",accesstype:"offline"})},e.showProfile=function(){n.getProfile().then(function(n){console.log("Profile object",n),e.profile=n}),n.getPeople().then(function(n){console.log("People object",n),e.people=n})}});